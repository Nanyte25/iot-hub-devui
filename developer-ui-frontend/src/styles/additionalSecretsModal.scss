@import "_globalVars.scss";
@import "_mixins.scss";

.configuration-modal {
  height: 50vh;
  display: flex;
  justify-content: space-between;
  flex-direction: column;

  select,
  option {
    display: unset !important;
  }

  .configuration-modal-header {
    display: inline-block;
    width: calc(100% - 2 * 2.4rem);
    white-space: nowrap;
    border-bottom: 1px solid rgba(34, 36, 38, 0.15);
    padding: 2.4rem;

    h2 {
      padding: 0;
      border-bottom: 0;
      overflow: hidden;
      text-overflow: ellipsis;
      width: 100%;
      .configuration-modal-logo {
        display: inline-block;
        height: 2.2rem;
        width: 2.2rem;
        margin-right: 1rem;
        path {
          fill: $accent_color;
        }
      }
      span {
        opacity: 0.5;
      }
    }
  }
  .configuration-modal-content {
    padding-left: 10rem;
    padding-right: 10rem;
    display: flex;
    justify-content: center;
    flex-flow: column nowrap;
    align-items: center;
    position: relative;
    flex: 1;
    border-bottom: 1px solid #ccc;

    & > div {
      width: 100%;
      margin: 1rem 0;
      display: flex;
      align-items: center;
      label {
        display: inline-block;
        width: 11rem;
        margin-right: 1rem;
        font-weight: 600;
      }
      .decorated-text-input,
      select {
        flex: 1;
      }

      .decorated-text-input > input,
      select {
        font-size: 1.6rem;
        padding: 0.7rem 0;
      }

      .decorated-text-input {
        position: relative;
        input[type="password"] {
          width: 100%;
          height: 1.8rem;
          border-width: 0 0 1px 0;
          border-color: #ccc;
          color: #757575;

          @include focusAnimatedTextField();
          &.error {
            ~ .bar:before,
            ~ .bar:after {
              background: $accent_red;
            }
            ~ .input-icon path {
              fill: $accent_red;
              opacity: 0.75;
            }
          }
          &.warning {
            ~ .bar:before,
            ~ .bar:after {
              background: $accent_yellow;
            }
            ~ .input-icon path {
              fill: $accent_yellow;
              opacity: 0.75;
            }
          }

          &:focus {
            & ~ .input-icon {
              transform: translate(-50%, -50%) scale(1.3);
            }
          }
        }

        .hint-text {
          font-size: smaller;
          text-align: right;
          margin-top: 0.3rem;

          &.error {
            color: rgba($accent_red, 0.7);
          }

          &.warning {
            color: rgba(#000, 0.7);
          }
        }

        .input-icon {
          position: absolute;
          top: 1.55rem;
          transform: translate(-50%, -50%);
          right: 0rem;
          width: 1.5rem;
          height: 1.5rem;
          transition: transform 0.2s cubic-bezier(0.2, 0.6, 0.3, 1.1);
        }
      }
    }

    .configuration-modal-infobox {
      border: 2px solid $accent_green;
      background-color: rgba($accent_green, 0.2);
      padding: 1.5rem;
      display: block;
      margin-top: 1rem;
      width: calc(100% - 2rem);
      font-size: smaller;
      border-radius: 0.4rem;
      color: darken($accent_green, 40%);
    }
  }
  .confirmation-btns {
    display: flex;
    flex-direction: row;
    justify-content: flex-end;
    padding: 1rem 2.4rem 2.4rem 2.4rem;
    #cancel-btn {
      @include flatBtn(#ccc, "");
      a {
        text-decoration: none !important;
        color: inherit;
      }
    }
    #submit-btn {
      @include flatBtn($accent_blue, "submit");
    }
  }
}
